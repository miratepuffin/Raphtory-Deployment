digraph finite_state_machine {
    rankdir=LR;

    node [shape = doublecircle, fontsize=20, width=2,fixedsize=true] connected; crashed;

    node [shape = circle, fontsize=20,width=2,fixedsize=true] start;NetworkSize;handshake
    AnalyserPresent;ClassMissing;Ready;EndStep;

    connected[label="Connected"]
    start[label="Start"]
    NetworkSize[label="Analyser\nPrecheck"]
    crashed[label="Crashed"]
  #  {rank = same; crashed[group=g2]; ClassMissing[group=g2];NetworkSize;AnalyserPresent}
    Ready[label="Processing"]
    handshake[label="Handshake"]
    AnalyserPresent[label="Analyser\nPresent"]
    EndStep[label="End\nStep"]
    ClassMissing[label="Class\nMissing"]

    connected   -> start  [ label = "Received start request\n --------------------------------\nRequesting Partition Manager count",fontsize=20 ];
    start   -> handshake  [ label = "Received Partition Manager count\n --------------------------------\nBroadcasting handshake to PM's\nSetting request timeout",fontsize=20 ];
    handshake -> handshake [ label = "Received response from a PM\n Response count < PM count \n --------------------------------\nIncrementing response count",fontsize=20,weight=2.0 ];
    handshake:s -> handshake:s [ label = "Received Timeout \n --------------------------------\nRebroadcasting handshake\nResetting response count",fontsize=20 ];
    handshake -> NetworkSize [ label = "Received response from a PM\n Response count == PM count\n --------------------------------\nBroadcasting Analyser presence precheck\nRemoving timeout",fontsize=20 ];

  #  ClassMissing -> NetworkSize[style=invis]
    NetworkSize -> ClassMissing [ label = "Analyser missing\n --------------------------------\nSending serialised Analyer\nRequesting execution of setup step",fontsize=20];
    #crashed -> ClassMissing[style=invis]
    ClassMissing -> crashed [ label = "Analyser could not be compiled\n --------------------------------\nDisconnecting from cluster",fontsize=20];
    ClassMissing -> ClassMissing[ label = "A PM has completed their setup\n Response count < PM count \n --------------------------------\nIncrementing response count",fontsize=20 ];
    ClassMissing -> Ready:s [ label = "A PM has completed their setup\n Response count == PM count \n --------------------------------\nBroadcasting first superstep",fontsize=20 ];

    NetworkSize -> AnalyserPresent [ label = "Analyser confirmed present\n --------------------------------\nRequesting execution of setup step",fontsize=20,minlen=2 ];
    AnalyserPresent -> Ready [ label = "A PM has completed their setup\n Response count == PM count \n --------------------------------\nBroadcasting first superstep",fontsize=20,minlen=2 ];
    AnalyserPresent -> AnalyserPresent [ label = "A PM has completed their setup\n Response count < PM count \n --------------------------------\nIncrementing response count",fontsize=20 ];

    Ready -> Ready [ label = "A PM has completed their processing step\n Response count < PM count \n --------------------------------\nIncrementing response count",fontsize=20 ];
    Ready -> EndStep[ label = "A PM has completed their processing step\n Response count == PM count \n --------------------------------\nResetting response count\nChecking termination conditions",fontsize=20,minlen=3  ];

    EndStep -> Ready [ label = "Step count < defined steps \n || End processing req not met \n --------------------------------\nIncrementing step count\nBroadcasting next superstep",fontsize=20 ];

    EndStep -> Restart [ label = "Step count == defined steps \n || End processing req met \n --------------------------------\nProcessing results\nSetting delayed restart",fontsize=20 ];
    Restart -> NetworkSize [ label = "Restart triggered \n --------------------------------\nBroadcasting Analyser presence precheck",fontsize=20];
    nodesep=1



}
